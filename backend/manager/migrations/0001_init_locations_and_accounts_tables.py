"""init_location_table

Revision ID: 0001
Revises: 
Create Date: 2023-07-11 13:13:11.172695

"""
from uuid import uuid4

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
                    sa.Column('name', sa.String(length=48), nullable=False),
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=True)

    op.create_table('locations',
                    sa.Column('account_id', sa.String(), nullable=False),
                    sa.Column('name', sa.String(length=48), nullable=False, unique=True),
                    sa.Column('city', sa.String(length=48), nullable=False),
                    sa.Column('address1', sa.String(length=48), nullable=False),
                    sa.Column('address2', sa.String(length=100), nullable=True),
                    sa.Column('comment', sa.String(length=200), nullable=True),
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
                    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=True)

    account_id = str(uuid4())
    op.execute(f"INSERT INTO accounts (id, name, is_active) VALUES ('{account_id}', 'main', 't');")
    op.execute(f"INSERT INTO locations (id, account_id, name, city, address1, is_active) "
               f"VALUES ('default', '{account_id}', 'Random location', 'Random city', 'Random address', 't');")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
